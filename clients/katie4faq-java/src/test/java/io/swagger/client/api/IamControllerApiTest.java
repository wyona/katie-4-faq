/*
 * API
 * Documentation API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PasswordResetToken;
import io.swagger.client.model.User;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IamControllerApi
 */
@Ignore
public class IamControllerApiTest {

    private final IamControllerApi api = new IamControllerApi();

    
    /**
     * Add user, whereas username, email, role (ADMIN, USER) and password are required. Username and email can be the same.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void addUserUsingPOSTTest() throws ApiException {
        User user = null;
        Object response = api.addUserUsingPOST(user);

        // TODO: test validations
    }
    
    /**
     * Get a particular user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserUsingGET1Test() throws ApiException {
        String id = null;
        Object response = api.getUserUsingGET1(id);

        // TODO: test validations
    }
    
    /**
     * Get all users
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUsersUsingGETTest() throws ApiException {
        String domainId = null;
        Object response = api.getUsersUsingGET(domainId);

        // TODO: test validations
    }
    
    /**
     * Reset password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void resetPasswordUsingPUTTest() throws ApiException {
        PasswordResetToken passwordResetToken = null;
        Object response = api.resetPasswordUsingPUT(passwordResetToken);

        // TODO: test validations
    }
    
    /**
     * Submit email or username when forgot password
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void submitUsernameUsingPOSTTest() throws ApiException {
        String username = null;
        Object response = api.submitUsernameUsingPOST(username);

        // TODO: test validations
    }
    
    /**
     * Update a particular user
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserUsingPUTTest() throws ApiException {
        String id = null;
        User user = null;
        Object response = api.updateUserUsingPUT(id, user);

        // TODO: test validations
    }
    
}
