/*
 * API
 * Documentation API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Hostname;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigurationControllerApi
 */
@Ignore
public class ConfigurationControllerApiTest {

    private final ConfigurationControllerApi api = new ConfigurationControllerApi();

    
    /**
     * Create a new domain
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDomainUsingPOSTTest() throws ApiException {
        Boolean answersGenerallyProtected = null;
        String mailSubjectTag = null;
        String name = null;
        Object response = api.createDomainUsingPOST(answersGenerallyProtected, mailSubjectTag, name);

        // TODO: test validations
    }
    
    /**
     * Process Content Security Policy violation report
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cspViolationReportUsingPOSTTest() throws ApiException {
        Object response = api.cspViolationReportUsingPOST();

        // TODO: test validations
    }
    
    /**
     * Delete domain configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDomainUsingDELETETest() throws ApiException {
        String id = null;
        Object response = api.deleteDomainUsingDELETE(id);

        // TODO: test validations
    }
    
    /**
     * Get server configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getConfigurationUsingGETTest() throws ApiException {
        Object response = api.getConfigurationUsingGET();

        // TODO: test validations
    }
    
    /**
     * Get domain configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContextConfigurationUsingGETTest() throws ApiException {
        String id = null;
        Object response = api.getContextConfigurationUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Get all domain configurations which signed in user has access to
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getContextConfigurationUsingGET1Test() throws ApiException {
        Object response = api.getContextConfigurationUsingGET1();

        // TODO: test validations
    }
    
    /**
     * Get domain configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDomainDisplayInformationUsingGETTest() throws ApiException {
        String id = null;
        Object response = api.getDomainDisplayInformationUsingGET(id);

        // TODO: test validations
    }
    
    /**
     * Get server configuration
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getVersionUsingGETTest() throws ApiException {
        Object response = api.getVersionUsingGET();

        // TODO: test validations
    }
    
    /**
     * Update the hostname used inside mail/message body
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMessageBodyHostnameUsingPUTTest() throws ApiException {
        Hostname hostname = null;
        String id = null;
        Object response = api.updateMessageBodyHostnameUsingPUT(hostname, id);

        // TODO: test validations
    }
    
}
