/*
 * API
 * Documentation API V1
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.Message;
import io.swagger.client.model.MicrosoftChannelData;
import io.swagger.client.model.MicrosoftConversation;
import io.swagger.client.model.MicrosoftEntity;
import io.swagger.client.model.MicrosoftFrom;
import io.swagger.client.model.MicrosoftRecipient;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * MicrosoftBotMessage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-06T08:37:37.081Z")
public class MicrosoftBotMessage {
  @SerializedName("channelData")
  private MicrosoftChannelData channelData = null;

  @SerializedName("conversation")
  private MicrosoftConversation conversation = null;

  @SerializedName("entities")
  private List<MicrosoftEntity> entities = null;

  @SerializedName("from")
  private MicrosoftFrom from = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("localTimezone")
  private String localTimezone = null;

  @SerializedName("locale")
  private String locale = null;

  @SerializedName("recipient")
  private MicrosoftRecipient recipient = null;

  @SerializedName("serviceUrl")
  private String serviceUrl = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("value")
  private Message value = null;

  public MicrosoftBotMessage channelData(MicrosoftChannelData channelData) {
    this.channelData = channelData;
    return this;
  }

   /**
   * Get channelData
   * @return channelData
  **/
  @ApiModelProperty(value = "")
  public MicrosoftChannelData getChannelData() {
    return channelData;
  }

  public void setChannelData(MicrosoftChannelData channelData) {
    this.channelData = channelData;
  }

  public MicrosoftBotMessage conversation(MicrosoftConversation conversation) {
    this.conversation = conversation;
    return this;
  }

   /**
   * Get conversation
   * @return conversation
  **/
  @ApiModelProperty(value = "")
  public MicrosoftConversation getConversation() {
    return conversation;
  }

  public void setConversation(MicrosoftConversation conversation) {
    this.conversation = conversation;
  }

  public MicrosoftBotMessage entities(List<MicrosoftEntity> entities) {
    this.entities = entities;
    return this;
  }

  public MicrosoftBotMessage addEntitiesItem(MicrosoftEntity entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<MicrosoftEntity>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Get entities
   * @return entities
  **/
  @ApiModelProperty(value = "")
  public List<MicrosoftEntity> getEntities() {
    return entities;
  }

  public void setEntities(List<MicrosoftEntity> entities) {
    this.entities = entities;
  }

  public MicrosoftBotMessage from(MicrosoftFrom from) {
    this.from = from;
    return this;
  }

   /**
   * Get from
   * @return from
  **/
  @ApiModelProperty(value = "")
  public MicrosoftFrom getFrom() {
    return from;
  }

  public void setFrom(MicrosoftFrom from) {
    this.from = from;
  }

  public MicrosoftBotMessage id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public MicrosoftBotMessage localTimezone(String localTimezone) {
    this.localTimezone = localTimezone;
    return this;
  }

   /**
   * Get localTimezone
   * @return localTimezone
  **/
  @ApiModelProperty(value = "")
  public String getLocalTimezone() {
    return localTimezone;
  }

  public void setLocalTimezone(String localTimezone) {
    this.localTimezone = localTimezone;
  }

  public MicrosoftBotMessage locale(String locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Get locale
   * @return locale
  **/
  @ApiModelProperty(value = "")
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }

  public MicrosoftBotMessage recipient(MicrosoftRecipient recipient) {
    this.recipient = recipient;
    return this;
  }

   /**
   * Get recipient
   * @return recipient
  **/
  @ApiModelProperty(value = "")
  public MicrosoftRecipient getRecipient() {
    return recipient;
  }

  public void setRecipient(MicrosoftRecipient recipient) {
    this.recipient = recipient;
  }

  public MicrosoftBotMessage serviceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
    return this;
  }

   /**
   * Get serviceUrl
   * @return serviceUrl
  **/
  @ApiModelProperty(value = "")
  public String getServiceUrl() {
    return serviceUrl;
  }

  public void setServiceUrl(String serviceUrl) {
    this.serviceUrl = serviceUrl;
  }

  public MicrosoftBotMessage text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public MicrosoftBotMessage type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public MicrosoftBotMessage value(Message value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(value = "")
  public Message getValue() {
    return value;
  }

  public void setValue(Message value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MicrosoftBotMessage microsoftBotMessage = (MicrosoftBotMessage) o;
    return Objects.equals(this.channelData, microsoftBotMessage.channelData) &&
        Objects.equals(this.conversation, microsoftBotMessage.conversation) &&
        Objects.equals(this.entities, microsoftBotMessage.entities) &&
        Objects.equals(this.from, microsoftBotMessage.from) &&
        Objects.equals(this.id, microsoftBotMessage.id) &&
        Objects.equals(this.localTimezone, microsoftBotMessage.localTimezone) &&
        Objects.equals(this.locale, microsoftBotMessage.locale) &&
        Objects.equals(this.recipient, microsoftBotMessage.recipient) &&
        Objects.equals(this.serviceUrl, microsoftBotMessage.serviceUrl) &&
        Objects.equals(this.text, microsoftBotMessage.text) &&
        Objects.equals(this.type, microsoftBotMessage.type) &&
        Objects.equals(this.value, microsoftBotMessage.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(channelData, conversation, entities, from, id, localTimezone, locale, recipient, serviceUrl, text, type, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MicrosoftBotMessage {\n");
    
    sb.append("    channelData: ").append(toIndentedString(channelData)).append("\n");
    sb.append("    conversation: ").append(toIndentedString(conversation)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localTimezone: ").append(toIndentedString(localTimezone)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    recipient: ").append(toIndentedString(recipient)).append("\n");
    sb.append("    serviceUrl: ").append(toIndentedString(serviceUrl)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

